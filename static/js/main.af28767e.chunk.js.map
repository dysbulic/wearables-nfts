{"version":3,"sources":["contracts sync /^/.//.*/.address/.js$","contracts/WearablesNFTs.abi.js","contracts/WearablesNFTs.bytecode.js","contracts/WearablesNFTs.address.js","hooks/ContractLoader.js","hooks/Poller.js","hooks/OnBlock.js","hooks/LookupAddress.js","components/Address.jsx","components/Balance.jsx","hooks/Balance.js","components/Account.jsx","components/BytesStringInput.jsx","components/ChainAlert.jsx","components/DistributeModal.jsx","components/GasGauge.jsx","components/Header.jsx","constants.js","helpers/index.js","components/Wallet.jsx","views/NFTGrid.jsx","components/NFTForm.jsx","views/CreateNFT.jsx","views/DisburseNFTs.jsx","views/NFTList.jsx","views/DisburseOrList.jsx","views/UpdateNFT.jsx","views/EditOrList.jsx","views/NFTDetails.jsx","views/ViewOrList.jsx","views/ManageRoles.jsx","App.jsx","hooks/UserAddress.js","index.jsx","ethereum.svg","contracts sync /^/.//.*/.abi/.js$","contracts sync /^/.//.*/.bytecode/.js$","contracts/contracts.js","logo.svg","polygon.svg"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","loadContract","contractName","signer","newContract","Contract","require","bytecode","console","error","fn","delay","extraWatch","savedCallback","useRef","useEffect","current","setInterval","clearInterval","provider","args","listener","blockNumber","on","off","lookupAddress","a","address","isAddress","reported","resolveName","resolved","getAddress","useState","ensName","setEnsName","cache","window","localStorage","getItem","JSON","parse","created_at","Date","now","name","then","setItem","stringify","props","SecondLine","value","ens","useLookupAddress","ensProvider","size","w","mt","ml","noOfLines","spacing","displayAddress","substr","test","etherscanLink","blockExplorer","blockExplorerLink","textProps","copyable","text","onChange","editable","title","onClick","blockieClick","seed","toLowerCase","scale","fontSize","mr","href","target","rel","input","balance","floatBalance","usingBalance","pollTime","setBalance","pollBalance","useCallback","getBalance","newBalance","eq","useOnBlock","usePoller","useBalance","undefined","etherBalance","formatEther","parseFloat","toFixed","src","eth","alt","h","minimized","injectedProvider","mainnetProvider","localProvider","useBreakpointValue","base","lg","Address","utils","constants","NETWORK","selectedChainId","targetChainId","show","setShow","switchChain","ethereum","request","method","params","chainId","toString","status","maxW","bg","flexDirection","align","position","right","top","InputTabs","raw","update","addresses","isFitted","variant","mb","placeholder","ref","minH","evt","addr","key","justifyContent","isOpen","onClose","quantity","distribute","setRaw","setAddresses","split","filter","process","initialFocusRef","length","colorScheme","NetworkMismatch","ChainAlert","zIndex","ConnectionButton","web3Modal","logoutOfWeb3Modal","loadWeb3Modal","cachedProvider","hasArrow","placement","label","LogoutOutlined","LoginOutlined","NetworkDisplay","textAlign","paths","links","icon","Links","path","isAttached","justify","entries","link","to","style","margin","borderWidth","Title","logo","fontFamily","Network","toggleColorMode","colorMode","setSelectedChainId","getNetwork","gridTemplateColumns","sm","alignSelf","gridColumn","gridRow","mx","p","Account","includes","useLocation","pathname","replace","_","group","useColorMode","uiProps","netProps","forEach","prop","header","direction","grow","INFURA_ID","values","NETWORKS","ethIcon","localhost","color","rpcUrl","location","hostname","mainnet","kovan","faucet","rinkeby","ropsten","goerli","xdai","price","gasPrice","matic","polygonIcon","mumbai","httpURL","uri","match","capitalize","str","trim","sub","toUpperCase","substring","join","Typography","Text","Paragraph","gql","registryAddress","action","loading","data","tokens","setTokens","load","useHistory","tokenData","tokenRegistry","token","supply","totalSupply","metadata","URI","uris","Set","t","Promise","all","fetch","response","ok","json","meta","tkn","description","demarkdown","image","my","ModelModal","setWearables","type","setType","specifiedType","setSpecifiedType","onSubmit","preventDefault","stopPropagation","file","ws","confirm","addModel","files","as","padding","fontStyle","required","Anchor","box","anchor","visible","setVisible","elem","over","addEventListener","out","removeEventListener","hash","textDecoration","visibility","role","aria-label","Label","whiteSpace","ExpandShow","button","children","hide","setHide","toggle","cursor","AttrRow","attributes","setAttributes","index","setter","attrs","slice","setName","setValue","toISOString","getTime","parseInt","Close","Submit","purpose","desiredNetwork","isDisabled","contract","setDescription","homepage","setHomepage","setImage","imageRef","animation","setAnimation","wearables","setColor","setQuantity","treasurer","setTreasurer","useDisclosure","onOpen","REACT_APP_IPFS_URI","ipfsURI","ipfs","ipfsHttpClient","history","useParams","toast","useToast","refs","fromEntries","attr","external_url","animation_url","val","Array","isArray","Boolean","trait_type","display_type","properties","background_color","prev","tokenCount","nextId","message","document","getElementById","scroll","offsetTop","behavior","ipfsify","fileOrURL","startsWith","add","content","pin","wrapWithDirectory","result","cid","enact","mint","push","tokenId","setURI","isClosable","duration","submit","decimals","File","warn","dataURI","sx","listStyleType","isRequired","autoFocus","m","accept","display","URL","createObjectURL","maxH","click","background","ExternalLink","decodeURI","Add","idx","mimetype","model","NFTForm","TOKEN","balances","setBalances","setTokenId","total","setTotal","setMeta","addrSize","threeCol","contractAddress","useQuery","variables","info","config","recipients","r","distributeSingles","cause","identifier","quantities","bal","account","res","amount","localeCompare","sensitivity","TOKENS","nftContracts","nfts","tokenID","tokenURI","_hover","disburse","view","edit","DisburseNFTs","NFTList","setMetadata","EditOrList","UpdateNFT","Scene","source","scene","useGLTF","bBox","Box3","setFromObject","getSize","Vector3","near","far","lights","height","camera","fov","attach","Center","object","intensity","light","OrbitControls","Model","fallback","qError","debug","setError","msg","Helmet","property","minW","paddingTop","border","justifySelf","bottom","left","hr","linkTarget","isExternal","NFTDetails","NFTGrid","targetNetwork","StaticJsonRpcProvider","Web3Modal","network","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","setInjectedProvider","userAddress","setUserAddress","getSigner","useUserAddress","writeContracts","providerOrSigner","contracts","setContracts","listAccounts","accounts","contractList","newContracts","loadContracts","useContractLoader","setDesiredNetwork","connect","Web3Provider","clearCachedProvider","chainSub","accountSub","unsubscribe","className","Header","pl","pt","CreateNFT","WearablesNFTs","ViewOrList","ManageRoles","DisburseOrList","client","ApolloClient","InMemoryCache","theme","extendTheme","useSystemColorMode","initialColorMode","ReactDOM","render","App"],"mappings":"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","file":"static/js/main.af28767e.chunk.js","sourcesContent":["var map = {\n\t\"./WearablesNFTs.address.js\": 141\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1127;","module.exports = [\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"ApprovalForAll\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256[]\",\n        \"name\": \"values\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"name\": \"TransferBatch\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"TransferSingle\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"value\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"URI\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"accounts\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"name\": \"balanceOfBatch\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"to\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"distributeSingles\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isApprovedForAll\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"metadata\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"amounts\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeBatchTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"setApprovalForAll\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"newuri\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"setURI\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"name\": \"supportsInterface\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"tokenCount\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"uri\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];","module.exports = \"\";","module.exports = \"0xE912107b0eF3751B0ACcc6C99C498C2D7b6B5EEC\"","/* eslint-disable import/no-dynamic-require */\n/* eslint-disable global-require */\nimport { Contract } from '@ethersproject/contracts'\nimport { useState, useEffect } from 'react'\n\nconst loadContract = (contractName, signer) => {\n  const newContract = new Contract(\n    require(`../contracts/${contractName}.address.js`),\n    require(`../contracts/${contractName}.abi.js`),\n    signer,\n  );\n  try {\n    newContract.bytecode = require(`../contracts/${contractName}.bytecode.js`)\n  } catch(e) {\n    console.error('loadContract', e)\n  }\n  return newContract\n}\n\nexport default (providerOrSigner) => {\n  const [contracts, setContracts] = useState()\n\n  useEffect(() => {\n    const loadContracts = async () => {\n      if(providerOrSigner !== undefined) {\n        try {\n          let accounts\n          if(typeof providerOrSigner?.listAccounts === 'function') {\n            accounts = await providerOrSigner.listAccounts()\n          }\n\n          let signer\n          if(accounts && accounts.length > 0) {\n            signer = providerOrSigner.getSigner()\n          } else {\n            signer = providerOrSigner\n          }\n\n          const contractList = require('../contracts/contracts.js')\n\n          const newContracts = Object.fromEntries(\n            contractList.map((contractName) => (\n              [contractName, loadContract(contractName, signer)]\n            ))\n          )\n\n          setContracts(newContracts)\n        } catch(e) {\n          console.error('ERROR LOADING CONTRACTS!!', e);\n        }\n      }\n    }\n    loadContracts()\n  }, [providerOrSigner])\n\n  return contracts\n}","import { useEffect, useRef } from 'react'\n\nexport default (fn, delay, extraWatch) => {\n  const savedCallback = useRef()\n\n  useEffect(() => {\n    savedCallback.current = fn\n  }, [fn])\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    const tick = () => {\n      savedCallback.current()\n    }\n    if(delay !== null && delay > 0) {\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n  }, [delay])\n\n  useEffect(() => {\n    fn()\n  }, [extraWatch, fn])\n}","import { useEffect, useRef } from 'react'\n\nexport default (provider, fn, args = []) => {\n  const savedCallback = useRef()\n\n  useEffect(() => {\n    savedCallback.current = fn\n  }, [fn])\n\n  useEffect(() => {\n    if(fn && provider) {\n      const listener = (blockNumber) => {\n        savedCallback.current(...args)\n      }\n\n      provider.on('block', listener)\n\n      return () => {\n        provider.off('block', listener)\n      }\n    }\n  }, [provider, fn, args])\n}","import { useState, useEffect } from 'react'\nimport { getAddress, isAddress } from '@ethersproject/address'\n\nconst lookupAddress = async ({ provider, address }) => {\n  if(isAddress(address)) {\n    try {\n      // Accuracy of reverse resolution is not enforced.\n      // We then manually ensure that the reported ens name resolves to address\n      const reported = (\n        await provider.lookupAddress(address)\n      )\n      const resolved = (\n        await provider.resolveName(reported)\n      )\n\n      if(getAddress(address) === getAddress(resolved)) {\n        return reported\n      }\n      return getAddress(address)\n    } catch(e) {\n      return getAddress(address)\n    }\n  }\n  return address\n}\n\nexport default ({ provider, address }) => {\n  const [ensName, setEnsName] = useState(address)\n\n  useEffect(() => {\n    let cache = window.localStorage.getItem(\n      `ensCache_${address}`\n    )\n    cache = cache && JSON.parse(cache)\n    const cacheFor = 60 * 60 * 24 * 5 // 5 days\n\n    if(cache?.created_at + cacheFor > Date.now()) {\n      setEnsName(cache.name)\n    } else {\n      if(provider) {\n        lookupAddress({ provider, address })\n        .then(\n          (name) => {\n            if(name) {\n              setEnsName(name)\n              window.localStorage.setItem(\n                `ensCache_${address}`,\n                JSON.stringify({\n                  created_at: Date.now(),\n                  name: name,\n                })\n              )\n            }\n          }\n        )\n      }\n    }\n  }, [provider, address, setEnsName])\n\n  return ensName\n}","import React from 'react'\nimport Blockies from 'react-blockies'\nimport {\n  Flex, Box, SkeletonText, SkeletonCircle,\n} from '@chakra-ui/react'\nimport { useLookupAddress } from '../hooks'\n\nconst blockExplorerLink = (\n  (address, blockExplorer) => (\n    `${blockExplorer ?? \"https://etherscan.io/\"}address/${address}`\n  )\n)\n\nexport default (props) => {\n  const { SecondLine = null } = props\n  const address = props.value ?? props.address\n  const ens = useLookupAddress({\n    provider: props.ensProvider, address\n  })\n\n  if(!address) {\n    return (\n      <Flex>\n        <SkeletonCircle size={7} />\n        <SkeletonText w={20} mt={1} ml={1} noOfLines={2} spacing={1} />\n      </Flex>\n    )\n  }\n\n  let displayAddress = `${address.substr(0, 6)}…`\n\n  if(ens && !/^0x[0-9a-f]{40}$/i.test(ens)) {\n    displayAddress = ens\n  } else if(props.size === 'short') {\n    displayAddress += address.substr(-4)\n  } else if(props.size === 'medium') {\n    displayAddress += address.substr(-9)\n  } else if(props.size === 'long') {\n    displayAddress = address\n  }\n\n  const etherscanLink = (\n    blockExplorerLink(address, props.blockExplorer)\n  )\n\n  const textProps = { copyable: { text: address } }\n  if(props.onChange) {\n    textProps.editable = { onChange: props.onChange }\n  }\n\n  return (\n    <Flex title={address}>\n      <Box onClick={() => props.blockieClick?.()}>\n        <Blockies\n          seed={address.toLowerCase()}\n          size={SecondLine ? 15 : 8}\n          scale={props.fontSize ? props.fontSize / 7 : 4}\n        />\n      </Box>\n      <Box ml={2} mr={2}>\n        <Box {...textProps}>\n          <a\n            href={etherscanLink}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {displayAddress}\n          </a>\n        </Box>\n        {SecondLine}\n      </Box>\n    </Flex>\n  )\n}","import React from 'react'\nimport { formatEther } from '@ethersproject/units'\nimport { Flex, Image } from '@chakra-ui/react'\nimport { useBalance } from '../hooks'\nimport eth from '../ethereum.svg'\n\nexport default ({\n  provider, address, balance: input, value, size, ...props\n}) => {\n  const balance = useBalance(provider, address)\n  let floatBalance = 0\n  let usingBalance = balance\n\n  if(input !== undefined) {\n    usingBalance = input\n  }\n  if(value !== undefined) {\n    usingBalance = value\n  }\n\n  if(usingBalance) {\n    const etherBalance = formatEther(usingBalance)\n    floatBalance = parseFloat(etherBalance)\n  }\n\n  return (\n    <Flex title={`${floatBalance} ETH`} {...props}>\n      {floatBalance.toFixed(4)}\n      <Image src={eth} alt=\"ETH\" h=\"0.9em\" mt=\"4px\" ml=\"2px\"/>\n    </Flex>\n  )\n}","import { useState, useEffect, useCallback } from 'react'\nimport usePoller from './Poller'\nimport useOnBlock from './OnBlock'\n\nexport default (provider, address, pollTime = 0) => {\n  const [balance, setBalance] = useState()\n\n  const pollBalance = useCallback(\n    async (provider, address) => {\n      if(provider && address) {\n        const newBalance = (\n          await provider.getBalance(address)\n        )\n        if(!newBalance?.eq(balance ?? 0n)) {\n          setBalance(newBalance)\n        }\n      }\n    },\n    [balance],\n  )\n\n  useEffect(\n    () => { pollBalance(provider, address) },\n    [pollBalance, provider, address],\n  )\n\n  useOnBlock(\n    (pollTime === 0) && provider, // disable if poll time is 0\n    () => {\n      if(provider && address && pollTime === 0) {\n        pollBalance(provider, address)\n      }\n    }\n  )\n\n  usePoller(\n    async () => {\n      if(provider && address && pollTime > 0) {\n        pollBalance()\n      }\n    },\n    pollTime,\n    provider && address,\n  )\n\n  return balance\n}","import React from 'react'\nimport { Flex } from '@chakra-ui/react'\nimport Address from './Address'\nimport Balance from './Balance'\nimport { useBreakpointValue } from '@chakra-ui/react'\n\nexport default ({\n  address, minimized, blockExplorer,\n  injectedProvider, mainnetProvider,\n  localProvider, blockieClick, ...props\n}) => {\n  const size = useBreakpointValue({ base: 'shortest', lg: 'short' })\n\n  return minimized ? null : (\n    <Flex {...props}>\n      {!address ? (\n        \"Connecting…\"\n      ) : (\n        <Address\n          {...{\n            address,\n            blockExplorer,\n            blockieClick,\n            size,\n          }}\n          ensProvider={mainnetProvider}\n          SecondLine={\n            <Balance\n              mt=\"-5px\" {...{ address }}\n              provider={injectedProvider}\n            />\n          }\n        />\n      )}\n    </Flex>\n  )\n}","import React, { useState, useEffect } from \"react\"\nimport { Input } from \"antd\"\nconst { utils, constants } = require(\"ethers\")\n\n/*\n  ~ What it does? ~\n\n  Displays input field with options to convert between STRING and BYTES32\n\n  ~ How can I use? ~\n\n  <BytesStringInput\n    autofocus\n    value={\"scaffold-eth\"}\n    placeholder=\"Enter value...\"\n    onChange={value => {\n      setValue(value)\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide value={value} to specify initial string\n  - Provide placeholder=\"Enter value...\" value for the input\n  - Control input change by onChange={value => { setValue(value)}}\n\n*/\n\nexport default function BytesStringInput(props) {\n  const [mode, setMode] = useState(\"STRING\")\n  const [display, setDisplay] = useState()\n  const [value, setValue] = useState(constants.HashZero)\n\n  // current value is the value in bytes32\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value\n\n  const option = (title) => (\n    <div\n      style={{ cursor: \"pointer\" }}\n      onClick={() => {\n        if (mode === \"STRING\") {\n          setMode(\"BYTES32\")\n          if (!utils.isHexString(currentValue)) {\n              /* in case user enters invalid bytes32 number, \n                  it considers it as string and converts to bytes32 */\n              const changedValue = utils.formatBytes32String(currentValue)\n              setDisplay(changedValue)\n          } else {\n              setDisplay(currentValue)\n          }\n        } else {\n          setMode(\"STRING\")\n          if (currentValue && utils.isHexString(currentValue)) {\n            setDisplay(utils.parseBytes32String(currentValue))\n          } \n          else {\n            setDisplay(currentValue)\n          }\n        }\n      }}\n    >\n      {title}\n    </div>\n  )\n\n  let addonAfter\n  if (mode === \"STRING\") {\n    addonAfter = option(\"STRING 🔀\")\n  } else {\n    addonAfter = option(\"BYTES32 🔀\")\n  }\n\n  useEffect(\n    () => {\n      if(!currentValue){\n        setDisplay(\"\")\n      }\n    }\n  , [currentValue])\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"Enter value in \" + mode}\n      autoFocus={props.autoFocus}\n      value={display}\n      addonAfter={addonAfter}\n      onChange={async (e) => {\n        const newValue = e.target.value\n        if(mode === \"STRING\") {\n          //const ethValue = parseFloat(newValue) / props.price\n          //setValue(ethValue)\n          if(typeof props.onChange === \"function\") {\n            props.onChange(utils.formatBytes32String(newValue))\n          }\n          setValue(utils.formatBytes32String(newValue))\n          setDisplay(newValue)\n\n        } else {\n          if(typeof props.onChange === \"function\") {\n            props.onChange(newValue)\n          }\n          setValue(newValue)\n          setDisplay(newValue)\n        }\n      }}\n    />\n  )\n}\n","import {\n  Alert, AlertDescription, AlertIcon, AlertTitle, Button, CloseButton,\n} from '@chakra-ui/react'\nimport React, { useState } from 'react'\n\nexport default ({\n  NETWORK, selectedChainId, targetChainId, ...props\n}) => {\n  const [show, setShow] = useState(true)\n\n  if(!show) return null\n\n  const switchChain = async () => {\n    await window.ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{\n        chainId: (\n          `0x${NETWORK(targetChainId).chainId.toString(16)}`\n        )\n      }],\n    });\n  }\n\n  return (\n    <Alert\n      status=\"error\" maxW={80} bg=\"red.600\"\n      flexDirection=\"column\" {...props}\n    >\n      <AlertIcon />\n      <AlertTitle>Wrong Network</AlertTitle>\n      <AlertDescription align=\"center\">\n        You have{' '}\n        <b>{NETWORK(selectedChainId)?.name ?? 'Unknown'}</b>\n        {' '}selected and you need to be on{' '}\n        <b>{NETWORK(targetChainId).name}</b>.\n        {window.ethereum && (\n          <Button onClick={switchChain}>\n            Switch to {NETWORK(targetChainId).name}\n          </Button>\n        )}\n      </AlertDescription>\n      <CloseButton\n        position=\"absolute\" right={2} top={2}\n        onClick={() => setShow(false)}\n      />\n    </Alert>\n  )\n}","import React, { useRef, useState } from 'react'\nimport {\n  Modal, ModalOverlay, ModalContent, ModalHeader,\n  ModalCloseButton, ModalBody, ModalFooter,\n  Button, Tabs, TabList, TabPanels, Tab, TabPanel,\n  FormControl, FormLabel, FormHelperText, Textarea,\n  OrderedList, ListItem,\n} from '@chakra-ui/react'\nimport Address from './Address'\n\nconst InputTabs = ({\n  text, raw, update, addresses, ensProvider,\n}) => (\n  <Tabs isFitted variant=\"enclosed\">\n    <TabList mb=\"1em\">\n      <Tab>CSV</Tab>\n      <Tab>Parsed</Tab>\n    </TabList>\n    <TabPanels>\n      <TabPanel>\n        <FormControl>\n          <FormLabel>Comma Separated ETH Addresses</FormLabel>\n          <Textarea\n            placeholder=\"Enter space, semicolon, or comma separated eth addresses.\"\n            ref={text} value={raw} minH=\"6em\"\n            onChange={(evt) => update(evt.target.value)}\n          />\n          <FormHelperText>Each address will get one token.</FormHelperText>\n        </FormControl>\n      </TabPanel>\n      <TabPanel>\n        <OrderedList>\n          {addresses.map((addr) => (\n            <ListItem key={addr} justifyContent=\"center\">\n              <Address\n                value={addr} size=\"medium\" {...{ ensProvider }}\n              />\n            </ListItem>\n          ))}\n        </OrderedList>\n      </TabPanel>\n    </TabPanels>\n  </Tabs>\n)\n\nexport default ({\n  isOpen = false, onClose, quantity, ensProvider,\n  distribute,\n}) => {\n  const [raw, setRaw] = useState('')\n  const [addresses, setAddresses] = useState([])\n  const text = useRef()\n  const update = (input) => {\n    setRaw(input)\n    setAddresses(\n      input.split(/\\s*([;,]|\\s)\\s*/)\n      .filter(addr => !(/^([;,]|\\s)?$/.test(addr)))\n    )\n  }\n  const cancel = () => {\n    update('')\n    onClose()\n  }\n  const process = async () => {\n    try {\n      await distribute(addresses)\n      onClose()\n    } catch(err) {\n      console.error('Distribution Error', err)\n    }\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} initialFocusRef={text}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          Distribute {addresses.length} / {quantity} Tokens\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <InputTabs {...{\n            text,\n            raw,\n            update,\n            addresses,\n            ensProvider,\n          }}/>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            colorScheme=\"blue\" mr={3}\n            onClick={process}\n          >\n            Distribute\n          </Button>\n          <Button variant=\"ghost\" onClick={cancel}>Cancel</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}","import React from 'react'\nimport { Button } from '@chakra-ui/react'\n\nexport default ({ price }) => (\n  <Button\n    onClick={() => {\n      window.open('https://ethgasstation.info/')\n    }}\n    size=\"lg\" leftIcon=\"⛽️\" borderRadius=\"50%\"\n    variant=\"outline\" colorScheme=\"orange\"\n    title=\"Fast Gas Price\"\n  >\n    {price === undefined ? 0 : parseInt(price, 10) / 10 ** 9}g\n  </Button>\n)","import React, { useEffect, useState } from 'react'\nimport {\n  Box, Button, chakra, Flex, Image, Spacer, Stack, Text, Tooltip,\n  ButtonGroup, useColorMode, Wrap, Grid,\n} from '@chakra-ui/react'\nimport { LoginOutlined, LogoutOutlined } from '@ant-design/icons'\nimport { Link, useLocation } from 'react-router-dom'\nimport ChainAlert from './ChainAlert'\nimport Account from './Account'\nimport logo from '../logo.svg'\nimport '@fontsource/crimson-text/600.css'\n\nconst NetworkMismatch = ({\n  targetChainId, selectedChainId, NETWORK,\n}) => {\n  if(\n    targetChainId && selectedChainId\n    && targetChainId !== selectedChainId\n  ) {\n    return (\n      <ChainAlert\n        {...{ NETWORK, selectedChainId, targetChainId }}\n        position=\"absolute\" top={3} right={0} zIndex={2}\n      />\n    )\n  }\n  return null\n}\n\nconst ConnectionButton = ({\n  web3Modal, logoutOfWeb3Modal, loadWeb3Modal,\n}) => {\n  if(!web3Modal) return null\n\n  if(web3Modal.cachedProvider) {\n    return (\n      <Tooltip hasArrow key=\"logout\" placement=\"bottom\" label=\"Logout\">\n        <Button\n          onClick={logoutOfWeb3Modal}\n        >\n          <LogoutOutlined/>\n        </Button>\n      </Tooltip>\n    )\n  }\n  return (\n    <Tooltip hasArrow key=\"login\" placement=\"bottom\" label=\"Login\">\n      <Button\n        onClick={loadWeb3Modal}\n      >\n        <LoginOutlined/>\n      </Button>\n    </Tooltip>\n  )\n}\n\nconst NetworkDisplay = ({\n  injectedProvider, NETWORK, selectedChainId,\n}) => (\n  <Box mt=\"0 ! important\" w=\"100%\" textAlign=\"center\">\n    {!injectedProvider ? 'Disconnected' : (\n      NETWORK(selectedChainId)?.name\n      ?? `Unknown (${selectedChainId})`\n    )}\n  </Box>\n)\n\nconst paths = {\n  '/': 'List',\n  '/new': 'Create',\n  '/disburse': 'Distribute',\n  '/edit': 'Edit',\n  '/view': 'Display',\n}\nconst links = {\n  '/new': {\n    title: 'Create a New NFT', icon: '➕',\n  },\n  '/': {\n    title: 'List Existing NFTs', icon: '🗃️',\n  },\n  '/disburse': {\n    title: 'Distribute Existing NFTs', icon: '⛲',\n  },\n  '/view': {\n    title: 'View NFT', icon: '👁️',\n  },\n  '/edit': {\n    title: 'Edit NFT Metadata', icon: '✏️',\n  },\n}\n\nconst Links = ({ links, path }) => (\n  <ButtonGroup isAttached variant=\"outline\">\n    <Wrap justify=\"center\">\n      {Object.entries(links).map(\n        ([link, { title, icon }]) => (\n          <Tooltip\n            hasArrow key={link}\n            placement=\"bottom\" label={title}\n          >\n            <Link to={link} style={{ margin: 0 }}>\n              <Button\n                title={title}\n                borderWidth={3}\n                colorScheme={link === path ? 'blue' : 'gray'}\n              >\n                {icon}\n              </Button>\n            </Link>\n          </Tooltip>\n        )\n      )}\n    </Wrap>\n  </ButtonGroup>\n)\n\nconst Title = ({ title, ...props }) => (\n  <Link to=\"/\">\n    <Flex {...props}>\n      <Image src={logo} h=\"2rem\"/>\n      <Text ml={3} fontFamily=\"Crimson Text\" fontSize={35}>\n        Wearables NFT Manager{title ? `: ${title}` : ''}\n      </Text>\n    </Flex>\n  </Link>\n)\n\nconst Network = ({\n  toggleColorMode, colorMode, address,\n  injectedProvider, mainnetProvider, blockExplorer,\n  web3Modal, loadWeb3Modal, logoutOfWeb3Modal,\n  targetChainId, NETWORK, path,\n}) => {\n  const [selectedChainId, setSelectedChainId] = useState(null)\n\n  useEffect(() => {\n    (async () => {\n      setSelectedChainId(\n        (await injectedProvider?.getNetwork())?.chainId ?? null\n      )\n    })()\n  }, [injectedProvider])\n\n  return (\n    <Grid\n      gridTemplateColumns={{\n        base: '1fr 1fr [end]', sm: (\n          `${address ? '0fr 1fr 0fr' : '0fr 0fr'} [end]`\n        )\n      }}\n      alignSelf={{ base: 'center', sm: 'start' }}\n      mt={[2, '-1rem']} ml={1.5}\n    >\n      <Button\n        gridColumn={1}\n        gridRow={{ base: 2, sm: 1 }}\n        onClick={toggleColorMode}\n        mx={1} p={0}\n      >\n        {colorMode !== 'light' ? '🔆' : '🌛'}\n      </Button>\n      {address && (\n        <Account\n          gridColumn={{ base: '1 / span 3', sm: 2 }}\n          gridRow={1}\n          {...{\n            address,\n            injectedProvider,\n            mainnetProvider,\n            blockExplorer,\n          }}\n        />\n      )}\n      <Stack\n        gridColumn=\"end\"\n        gridRow={{ base: 2, sm: 1 }}\n        mr={5}\n      >\n        <ConnectionButton {...{\n          web3Modal, loadWeb3Modal, logoutOfWeb3Modal,\n        }}/>\n        <NetworkDisplay {...{\n          injectedProvider, NETWORK, selectedChainId,\n        }}/>\n      </Stack>\n      {!['/view', '/'].includes(path) && (\n        <NetworkMismatch\n          {...{\n            targetChainId, selectedChainId, NETWORK,\n          }}\n        />\n      )}\n    </Grid>\n  )\n}\n\nexport default ({\n  ...props\n}) => {\n  const location = useLocation()\n  const path = (\n    location.pathname\n    .replace(/^(\\/[^/]*)(\\/.+)?$/, (_, group) => group)\n  ) \n  const title = paths[path]\n  const { colorMode, toggleColorMode } = useColorMode()\n  const uiProps = {...props}\n  const netProps = {...props}\n\n  ;([\n    'NETWORK', 'targetNetwork', 'address', 'injectedProvider',\n    'mainnetProvider', 'web3Modal', 'loadWeb3Modal',\n    'logoutOfWeb3Modal', 'blockExplorer', 'targetChainId'\n  ])\n  .forEach((prop) => delete uiProps[prop])\n\n  Object.keys(uiProps).forEach((prop) => delete netProps[prop])\n\n  return (\n    <chakra.header\n      {...uiProps} bg={colorMode === 'light' ? 'white' : 'gray.800'}\n      top={0} position={['inherit', 'sticky']} zIndex={2}\n    >\n      <Flex align=\"center\" direction={['column', 'row']}>\n        <Links {...{ links, path }}/>\n        <Spacer grow={1}/>\n        <Title {...{ title }} mt={{ base: 2, sm: 0 }}/>\n        <Spacer grow={1}/>\n        <Network {...netProps} {...{ toggleColorMode, path }}/>\n      </Flex>\n      <NetworkMismatch\n\n      />\n    </chakra.header>\n  )\n}","import polygonIcon from './polygon.svg'\nimport ethIcon from './ethereum.svg'\n\n// From: https://infura.io/dashboard/ethereum\nexport const INFURA_ID = '79a107f3e7784d31bcedd6fba13d93e9'\n\n// From: https://etherscan.io/myapikey\nexport const ETHERSCAN_KEY = '5T6PH4NAY5SDI9MQY8K7PW9CKIS2EBYGMX'\n\n//BLOCKNATIVE ID FOR Notify.js:\nexport const BLOCKNATIVE_DAPPID = '0b58206a-f3c0-4701-a62f-73c7243e8c77'\n\nexport const NFT_HOMEPAGE_BASE = 'https://dysbulic.github.io/wearables-nfts/#/view'\n\n// EXTERNAL CONTRACTS\nexport const DAI_ADDRESS = '0x6B175474E89094C44Da98b954EedeAC495271d0F'\n\nexport const DAI_ABI = [{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg1\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg2\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]\n\nexport const SUBGRAPH_URI = (\n  'https://api.thegraph.com/subgraphs/name/alberthaotan/nft-matic'\n  || 'https://api.thegraph.com/subgraphs/name/leon-do/polygon-erc721-erc1155'\n  || 'https://api.thegraph.com/subgraphs/name/0xorg/eip1155-subgraph-rinkeby'\n)\n\n\nexport const NETWORK = (chainId) => {\n  for(let props of Object.values(NETWORKS)) {\n    if(props.chainId === chainId) {\n      if(!props.icon) props.icon = ethIcon\n      return props\n    }\n  }\n}\n\nexport const NETWORKS = {\n  localhost: {\n    name: 'localhost',\n    color: '#666666',\n    chainId: 31337,\n    blockExplorer: '',\n    rpcUrl: `http://${window.location.hostname}:8545`,\n  },\n  mainnet: {\n    name: 'mainnet',\n    color: '#FF8B9E',\n    chainId: 1,\n    blockExplorer: 'https://etherscan.io',\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n  },\n  kovan: {\n    name: 'kovan',\n    color: '#7003DD',\n    chainId: 42,\n    blockExplorer: 'https://kovan.etherscan.io',\n    faucet: 'https://gitter.im/kovan-testnet/faucet/',\n    // faucet: 'https://faucet.kovan.network',\n    rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\n  },\n  rinkeby: {\n    name: 'rinkeby',\n    color: '#E0D068',\n    chainId: 4,\n    faucet: 'https://faucet.rinkeby.io',\n    blockExplorer: 'https://rinkeby.etherscan.io',\n    rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\n  },\n  ropsten: {\n    name: 'ropsten',\n    color: '#F60D09',\n    chainId: 3,\n    faucet: 'https://faucet.ropsten.be',\n    blockExplorer: 'https://ropsten.etherscan.io',\n    rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\n  },\n  goerli: {\n    name: 'goerli',\n    color: '#0975F6',\n    chainId: 5,\n    faucet: 'https://goerli-faucet.slock.it',\n    blockExplorer: 'https://goerli.etherscan.io',\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\n  },\n  xdai: {\n    name: 'xdai',\n    color: '#48A9A6',\n    chainId: 100,\n    price: 1,\n    gasPrice: 1000000000,\n    faucet: 'https://xdai-faucet.top',\n    blockExplorer: 'https://blockscout.com/poa/xdai/',\n    rpcUrl: 'https://dai.poa.network',\n  },\n  matic: {\n    name: 'matic',\n    color: '#2BBDF7',\n    chainId: 137,\n    price: 1,\n    gasPrice: 1000000000,\n    faucet: 'https://faucet.matic.network',\n    blockExplorer: 'https://explorer-mainnet.maticvigil.com',\n    rpcUrl: 'https://polygon-rpc.com',\n    // rpcUrl: `https://polygon-mainnet.infura.io/v3/${INFURA_ID}`,\n    icon: polygonIcon,\n  },\n  mumbai: {\n    name: 'mumbai',\n    color: '#92D9FA',\n    chainId: 80001,\n    price: 1,\n    gasPrice: 1000000000,\n    faucet: 'https://faucet.matic.network',\n    blockExplorer: 'https://mumbai-explorer.matic.today',\n    rpcUrl: 'https://rpc-mumbai.maticvigil.com',\n  },\n}\n","export { default as Transactor } from \"./Transactor\";\n\nexport const httpURL = (uri) => {\n  if(!uri?.match) return undefined\n  \n  const match = uri.match(/^(ip[nf]s):\\/\\/(.+)$/)\n  if(!match) {\n    return uri\n  } else {\n    return `https://ipfs.io/${match[1]}/${match[2]}`\n  }\n}\n\nexport const capitalize = (str) => {\n  if(!str?.split) return str\n  return (\n    str.trim().split(/\\s+/g)\n    .map((sub) => (`${\n      sub[0]?.toUpperCase() ?? ''\n    }${\n      sub.substring(1)?.toLowerCase() ?? ''\n    }`))\n    .join(' ')\n  )\n}","import React, { useState } from \"react\"\nimport {\n  WalletOutlined, QrcodeOutlined, SendOutlined, KeyOutlined,\n} from \"@ant-design/icons\"\nimport { Tooltip, Spin, Modal, Button, Typography } from \"antd\"\nimport QR from \"qrcode.react\"\nimport { parseEther } from \"@ethersproject/units\"\nimport { useUserAddress } from \"eth-hooks\"\nimport { Transactor } from \"../helpers\"\nimport Address from \"./Address\"\nimport Balance from \"./Balance\"\nimport AddressInput from \"./AddressInput\"\nimport EtherInput from \"./EtherInput\"\nimport { ethers } from \"ethers\"\nconst { Text, Paragraph } = Typography\n\n/*\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n*/\n\nexport default function Wallet(props) {\n  const signerAddress = useUserAddress(props.provider);\n  const selectedAddress = props.address || signerAddress;\n\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState()\n\n  const providerSend = props.provider ? (\n    <Tooltip title=\"Wallet\">\n      <WalletOutlined\n        onClick={() => {\n          setOpen((open) => !open)\n        }}\n        rotate={-90}\n        style={{\n          padding: 7,\n          color: props.color ? props.color : \"\",\n          cursor: \"pointer\",\n          fontSize: 28,\n          verticalAlign: \"middle\",\n        }}\n      />\n    </Tooltip>\n  ) : null\n\n  let display\n  let receiveButton\n  let privateKeyButton\n  if(qr) {\n    display = (\n      <div>\n        <div>\n          <Text copyable>{selectedAddress}</Text>\n        </div>\n        <QR\n          value={selectedAddress}\n          size={450}\n          level=\"H\"\n          includeMargin\n          renderAs=\"svg\"\n          imageSettings={{ excavate: false }}\n        />\n      </div>\n    )\n    receiveButton = (\n      <Button\n        key=\"hide-receive\"\n        onClick={() => {\n          setQr(\"\")\n        }}\n      >\n        <QrcodeOutlined /> Hide\n      </Button>\n    )\n    privateKeyButton = (\n      <Button key=\"hide-key\" onClick={() => {\n        setPK(selectedAddress)\n        setQr(\"\")\n      }}>\n        <KeyOutlined /> Private Key\n      </Button>\n    )\n  } else if(pk) {\n    let pk = localStorage.getItem(\"metaPrivateKey\")\n    let wallet = new ethers.Wallet(pk)\n\n    if(wallet.address !== selectedAddress){\n      display = (\n        <div>\n          <b>*<em>injected account</em>*, private key unknown</b>\n        </div>\n      )\n    } else {\n      let extraPkDisplayAdded = {}\n      let extraPkDisplay = []\n      extraPkDisplayAdded[wallet.address] = true\n      extraPkDisplay.push(\n        <div style={{fontSize:16,padding:2,backgroundStyle:\"#89e789\"}}>\n          <a href={`/pk#${pk}`}>\n            <Address\n              minimized={true}\n              address={wallet.address}\n              ensProvider={props.ensProvider}\n            />\n            {wallet.address.substr(0,6)}\n          </a>\n        </div>\n      )\n      for(var key in localStorage){\n        if(key.indexOf(\"metaPrivateKey_backup\") >= 0){\n          console.log(key)\n          let pastpk = localStorage.getItem(key)\n          let pastwallet = new ethers.Wallet(pastpk)\n          if(!extraPkDisplayAdded[pastwallet.address] /*&& selectedAddress!=pastwallet.address*/){\n            extraPkDisplayAdded[pastwallet.address] = true\n            extraPkDisplay.push(\n              <div style={{ fontSize: 16 }}>\n                <a href={`/pk#${pastpk}`}>\n                  <Address minimized={true} address={pastwallet.address} ensProvider={props.ensProvider} /> {pastwallet.address.substr(0,6)}\n                </a>\n              </div>\n            )\n          }\n        }\n      }\n\n      display = (\n        <div>\n          <b>Private Key:</b>\n\n          <div><Text copyable>{pk}</Text></div>\n\n          <hr/>\n\n          <i>Point your camera phone at QR code to open in\n            <a target=\"_blank\" href={`https://xdai.io/${pk}`} rel=\"noopener noreferrer\">burner wallet</a>:\n          </i>\n          <QR value={`https://xdai.io/${pk}`} size={450} level=\"H\" includeMargin={true} renderAs=\"svg\" imageSettings={{ excavate: false }}/>\n\n          <Paragraph style={{ fontSize: 16 }} copyable>{`https://xdai.io/${pk}`}</Paragraph>\n\n          {extraPkDisplay && (\n            <div>\n              <h3>Known Private Keys:</h3>\n              {extraPkDisplay}\n              <Button onClick={() => {\n                let currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\")\n                if(currentPrivateKey) {\n                  window.localStorage.setItem(\"metaPrivateKey_backup\"+Date.now(),currentPrivateKey);\n                }\n                const randomWallet = ethers.Wallet.createRandom()\n                const privateKey = randomWallet._signingKey().privateKey\n                window.localStorage.setItem(\"metaPrivateKey\",privateKey);\n                window.location.reload()\n              }}>\n                Generate\n              </Button>\n            </div>\n          )}\n        </div>\n      )\n    }\n\n    receiveButton = (\n      <Button key=\"receive\" onClick={() => {\n        setQr(selectedAddress)\n        setPK(\"\")\n      }}>\n        <QrcodeOutlined /> Receive\n      </Button>\n    )\n    privateKeyButton = (\n      <Button key=\"hide\" onClick={() => {\n        setPK(\"\")\n        setQr(\"\")\n      }}>\n        <KeyOutlined /> Hide\n      </Button>\n    )\n  } else {\n    const inputStyle = {\n      padding: 10,\n    }\n\n    display = (\n      <div>\n        <div style={inputStyle}>\n          <AddressInput\n            autoFocus\n            ensProvider={props.ensProvider}\n            placeholder=\"to address\"\n            address={toAddress}\n            onChange={setToAddress}\n          />\n        </div>\n        <div style={inputStyle}>\n          <EtherInput\n            price={props.price}\n            value={amount}\n            onChange={value => {\n              setAmount(value);\n            }}\n          />\n        </div>\n      </div>\n    )\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress)\n          setPK(\"\")\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    )\n    privateKeyButton = (\n      <Button key=\"hide\" onClick={() => {\n        setPK(selectedAddress)\n        setQr(\"\")\n      }}>\n        <KeyOutlined /> Private Key\n      </Button>\n    )\n  }\n\n  return (\n    <span>\n      {providerSend}\n      <Modal\n        visible={open}\n        title={\n          <div>\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\n            <div style={{ float: \"right\", paddingRight: 25 }}>\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\n            </div>\n          </div>\n        }\n        onOk={() => {\n          setQr()\n          setPK()\n          setOpen((open) => !open)\n        }}\n        onCancel={() => {\n          setQr()\n          setPK()\n          setOpen((open) => !open)\n        }}\n        footer={[\n          privateKeyButton,\n          receiveButton,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!amount || !toAddress || qr}\n            loading={false}\n            onClick={() => {\n              const tx = Transactor(props.provider)\n              let value\n              try {\n                value = parseEther(amount.toString())\n              } catch (e) {\n                // failed to parseEther, try something else\n                value = parseEther(parseFloat(amount).toFixed(8))\n              }\n\n              tx({\n                to: toAddress,\n                value,\n              })\n              setOpen((open) => !open)\n              setQr()\n            }}\n          >\n            <SendOutlined /> Send\n          </Button>,\n        ]}\n      >\n        {display}\n      </Modal>\n    </span>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport {\n  Alert, AlertIcon, Button, Spinner, Image, Tooltip,\n  Wrap, Container, Box, useColorMode, Stack, Text,\n} from '@chakra-ui/react'\nimport { ExternalLinkIcon } from '@chakra-ui/icons'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useQuery, gql } from '@apollo/client'\nimport demarkdown from 'remove-markdown'\nimport registryAddress from '../contracts/WearablesNFTs.address'\nimport { httpURL } from '../helpers'\n\nconst RINKEBY_TOKENS = gql(`\n  query GetTokens {\n    tokenRegistry(id: \"${registryAddress.toLowerCase()}\") {\n      id\n      tokens {\n        id\n        URI\n        totalSupply\n      }\n    }\n  }\n`)\n\nconst TOKENS = gql(`\n  query ERC1155Token {\n    tokenRegistry(id: \"${registryAddress.toLowerCase()}\") {\n      id\n      tokens {\n        id\n        URI\n        totalSupply\n      }\n    }\n  }\n`)\n\nexport default ({ action = null }) => {\n  const { loading, error, data } = {} // useQuery(TOKENS)\n  const [tokens, setTokens] = useState(null)\n  const { colorMode } = useColorMode()\n  const history = useHistory()\n  const load = useCallback(async () => {\n    if(data) {\n      const tokenData = data?.tokenRegistry?.tokens\n      if(!tokenData) {\n        return setTokens([])\n      }\n\n      const tokens = tokenData.map((token) => ({\n        loading: true,\n        id: token.id,\n        supply: token.totalSupply,\n        metadata: token.URI,\n      }))\n      setTokens(tokens)\n      const uris = [...new Set([...tokens.map(t => t.metadata)])]\n      await Promise.all(uris.map(async (uri) => {\n        const response = await fetch(httpURL(uri))\n        if(response.ok) {\n          const meta = await response.json()\n          setTokens((tokens) => {\n            return tokens.map((tkn) => {\n              if(tkn.metadata !== uri) {\n                return {\n                  ...tkn,\n                  loading: false,\n                }\n              } else {\n                return {\n                  ...tkn,\n                  loading: false,\n                  name: meta.name,\n                  description: demarkdown(meta.description),\n                  image: httpURL(meta.image),\n                }\n              }\n            })\n          })\n        }\n      }))\n    }\n  }, [data])\n\n  useEffect(() => { load() }, [load])\n\n  if(error) {\n    return (\n      <Container mt={10}><Alert status=\"error\">\n        <AlertIcon />\n        {error}\n      </Alert></Container>\n    )\n  }\n\n  if(!tokens || loading) {\n    return (\n      <Box align=\"center\" my={10}>\n        <Spinner/>\n      </Box>\n    )\n  }\n\n  if(tokens.length === 0) {\n    return (\n      <Container align=\"center\" mt={30}>\n        <h2>No Tokens Have Been Created Yet</h2>\n        <h2><em>(If you just minted a token, it may take several seconds for The Graph to add the new token to its index.)</em></h2>\n        <Link to=\"/new\"><Button>Create One</Button></Link>\n      </Container>\n    )\n  }\n\n  return (\n    <Wrap>\n      {tokens.map((token) => (\n        <Stack>\n          <Image src={token.image} alt={token.name}/>\n          <Text textAlign=\"center\" alt={token.description}>\n            {token.name}\n          </Text>\n        </Stack>\n      ))}\n    </Wrap>\n  )\n}\n","import {\n  chakra, Button, FormControl, Container, Input,\n  FormLabel, UnorderedList, ListItem, Box, Image,\n  Tabs, Tab, TabList, TabPanels, TabPanel, Textarea, Flex,\n  Text, ModalOverlay, ModalContent, ModalHeader,\n  ModalCloseButton, ModalBody, Select, ModalFooter, Modal,\n  useDisclosure, Table, Thead, Tbody, Tr, Th, Td, Tooltip, useToast, Heading,\n} from '@chakra-ui/react'\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport { AddIcon, CloseIcon, ExternalLinkIcon } from '@chakra-ui/icons'\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\nimport { httpURL, capitalize } from '../helpers'\nimport { NFT_HOMEPAGE_BASE } from '../constants'\n\nconst ModelModal = ({\n  isOpen, onClose, setWearables,\n}) => {\n  const [type, setType] = useState('model/gltf-binary')\n  const [specifiedType, setSpecifiedType] = useState('')\n  const addModel = (type, file) => {\n    setWearables((ws) => {\n      if(!ws[type] || window.confirm(`¿Replace ${type}?`)) {\n        return { ...ws, [type]: file }\n      } else {\n        return ws\n      }\n    })\n  }\n  \n  return (\n    <Modal {...{ isOpen, onClose }}>\n      <ModalOverlay/>\n      <ModalContent\n        onSubmit={(evt) => {\n          evt.preventDefault()\n          evt.stopPropagation()\n          addModel(\n            type !== 'other' ? type : specifiedType,\n            evt.target['file'].files[0],\n          )\n          onClose()\n        }}\n        as=\"form\"\n      >\n        <ModalHeader>Add Model</ModalHeader>\n        <ModalCloseButton/>\n        <ModalBody>\n          <FormControl id=\"mimetype\">\n            <FormLabel>Model Type:</FormLabel>\n            <Select\n              ml={5} w=\"calc(100% - 2rem)\"\n              value={type}\n              onChange={({ target: { value } }) => setType(value)}\n            >\n              <optgroup style={{ padding: 0 }}>\n                <option value=\"model/gltf-binary\">Binary glTF</option>\n                <option value=\"model/gltf+json\">glTF</option>\n                <option value=\"model/fbx\">FBX</option>\n                <option value=\"application/x-blender\">Blender</option>\n                <option value=\"model/vox\">VOX</option>\n                <option value=\"model/vrm\">VRM</option>\n              </optgroup>\n              <optgroup>\n                <option value=\"other\" style={{ fontStyle: 'italic' }}>\n                  Other\n                </option>\n              </optgroup>\n            </Select>\n            {type === 'other' && (\n              <Input\n                ml={5} mt={3} w=\"calc(100% - 2rem)\" placeholder=\"Mime Type\"\n                required={true} value={specifiedType}\n                onChange={({ target: { value } }) => (\n                  setSpecifiedType(value)\n                )}\n              />\n            )}\n          </FormControl>\n          <FormControl id=\"model\" mt={5}>\n            <FormLabel>Model File:</FormLabel>\n            <Input\n              id=\"file\" required={true} type=\"file\"\n              ml={5} w=\"calc(100% - 2rem)\" h=\"auto\"\n            />\n          </FormControl>\n        </ModalBody>\n\n        <ModalFooter>\n          <Button variant=\"outline\" onClick={onClose}>Cancel</Button>\n          <Button colorScheme=\"blue\" ml={3} type=\"submit\">\n            Add\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nconst Anchor = ({ name, box }) => {\n  const anchor = name.toLowerCase().replace(/\\s+/g, '-')\n  const [visible, setVisible] = useState(false)\n\n  useEffect(() => {\n    const elem = box?.current\n    if(elem) {\n      const over = () => setVisible(true)\n      elem.addEventListener('mouseover', over)\n      const out = () => setVisible(false)\n      elem.addEventListener('mouseout', out)\n      return () => {\n        elem.removeEventListener('mouseover', over)\n        elem.removeEventListener('mouseout', out)\n      }\n    }\n  }, [box])\n\n  return (\n    <Link\n      id={anchor}\n      to={{ hash: `#${anchor}` }}\n      style={{\n        textDecoration: 'none',\n        visibility: visible ? 'visible' : 'hidden'\n      }}\n    >\n      <span role=\"img\" aria-label=\"Link\">🔗</span>\n    </Link>\n  )\n}\n\nconst Label = ({ name, box }) => (\n  <Flex ml=\"-2.75em\" mt={-1.5}>\n    <Anchor {...{ name, box }}/>\n    <Text ml={3} mr={2}>■</Text>\n    <FormLabel whiteSpace=\"pre\">{name}:</FormLabel>\n  </Flex>\n)\n\nconst ExpandShow = ({ name, button = null, children }) => {\n  const [hide, setHide] = useState({})\n  const toggle = useCallback((prop) => {\n    setHide(h => ({ ...h, [prop]: !h[prop] }))\n  }, [])\n  const box = useRef()\n\n  return (\n    <Box ref={box}>\n      <Flex ml=\"-3em\" mt={3} align=\"center\">\n        <Anchor {...{ name, box }}/>\n        <Text\n          ml={3}\n          cursor={hide[name] ? 'zoom-in' : 'zoom-out'}\n          onClick={() => toggle(name)}\n        >\n          {hide[name] ? '▸' : '▾'}\n          {` ${name}:`}\n        </Text>\n        {!hide[name] && button}\n      </Flex>\n      {!hide[name] && children}\n    </Box>\n  )\n}              \n\nconst AttrRow = ({ attributes, setAttributes, index }) => {\n  const { name = '', value = '', type = 'string' } = (\n    attributes[index]\n  )\n  const setter = useCallback(\n    (prop) => (\n      (value) => setAttributes(\n        (attrs) => ([\n          ...attrs.slice(0, index),\n          {...attrs[index], [prop]: value },\n          ...attrs.slice(index + 1)\n        ])\n      )\n    ), [setAttributes, index]\n  )\n  const setName = setter('name')\n  const setValue = setter('value')\n  const setType = setter('type')\n\n  return (\n    <Tr>\n      <Td><Input\n        value={name}\n        onChange={({ target: { value } }) => setName(value)}\n      /></Td>\n      <Td>{(() => {\n        switch(type) {\n        case 'date':\n          return (\n            <Input\n              type=\"date\"\n              value={(new Date(value)).toISOString().split('T')[0]}\n              onChange={({ target: { value } }) => (\n                setValue((new Date(value)).getTime())\n              )}\n            />\n          )\n        case 'string':\n          return (\n            <Input\n              {...{ value }}\n              onChange={({ target: { value } }) => (\n                setValue(value)\n              )}\n            />\n          )\n        default:\n          return (\n            <Input\n              type=\"number\"\n              {...{ value }}\n              onChange={({ target: { value } }) => (\n                setValue(!!value ? parseInt(value, 10) : '')\n              )}\n            />\n          )\n        }\n      })()}</Td>\n      <Td>\n        <Select\n          value={type}\n          onChange={({ target: { value }}) => (\n            setType(value)\n          )}>\n          <option value=\"string\">String</option>\n          <option value=\"date\">Date</option>\n          <option value=\"number\">Number</option>\n          <option value=\"boost_percentage\">\n            Boost Percentage\n          </option>\n          <option value=\"boost_number\">\n            Boost Number\n          </option>\n        </Select>\n      </Td>\n      <Td><Tooltip label=\"Remove\" hasArrow>\n        <Button\n          size=\"sm\" ml={2}\n          onClick={() => setAttributes(\n            (attrs) => ([\n              ...attrs.slice(0, index),\n              ...attrs.slice(index + 1)\n            ])\n          )}\n        >\n          <CloseIcon/>\n        </Button>\n      </Tooltip></Td>\n    </Tr>\n  )\n}\n\nconst Submit = ({ purpose, desiredNetwork, ...props }) => (\n  <Input\n    variant=\"filled\" type=\"submit\"\n    value={capitalize(purpose)}\n    title={\n      !desiredNetwork ? `${capitalize(purpose)} NFT` : (\n        `Connect to the ${desiredNetwork} network.`\n      )\n    }\n    isDisabled={!!desiredNetwork}\n    {...props}\n  />\n)\n\nconst hasValue = (val) => {\n  if(Array.isArray(val)) {\n    return val.length > 0\n  }\n  if(val instanceof Object) {\n    return Object.keys(val).length > 0\n  }\n  return Boolean(val)\n}\n\nexport default ({\n  contract, purpose = 'create', onSubmit, desiredNetwork,\n  ensProvider, metadata,\n}) => {\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const [homepage, setHomepage] = useState('')\n  const [image, setImage] = useState()\n  const imageRef = useRef()\n  const [animation, setAnimation] = useState()\n  const [wearables, setWearables] = useState({})\n  const [attributes, setAttributes] = useState([])\n  const [color, setColor] = useState('#FFFFFF')\n  const [quantity, setQuantity] = useState(1)\n  const [treasurer, setTreasurer] = useState('')\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const [ipfsURI] = useState(\n    process.env.REACT_APP_IPFS_URI ?? '/ip4/127.0.0.1/tcp/5001'\n  )\n  const ipfs = ipfsHttpClient(ipfsURI)\n  const history = useHistory()\n  const params = useParams()\n  const location = useLocation()\n  const toast = useToast()\n  const refs = Object.fromEntries(\n    ['quantity', 'treasurer', 'name', 'homepage', 'background']\n    .map((attr) => [attr, useRef()])\n  )\n\n  useEffect(() => {\n    if(metadata) {\n      Object.entries({\n        name: setName, description: setDescription,\n        external_url: setHomepage, animation_url: setAnimation,\n        image: setImage, treasurer: setTreasurer,\n      })\n      .forEach(([prop, setter]) => {\n        setter(metadata[prop])\n      })\n\n      const attrs = metadata.attributes\n      if(hasValue(attrs)) {\n        setAttributes(attrs.map(({\n          trait_type: name, value, display_type: type = 'string',\n        }) => ({ name, value, type })))\n      }\n\n      setWearables(metadata.properties?.wearables ?? {})\n\n      const bg = metadata.background_color\n      setColor(prev => bg ? `#${bg}` : prev)\n    }\n  }, [metadata])\n\n  useEffect(() => {\n    ((async () => {\n      if(!!contract && purpose === 'create' && !homepage) {\n        try {\n          const nextId = (\n            (parseInt(await contract.tokenCount(), 16) + 1)\n            .toString(16)\n          )\n          setHomepage(\n            `${NFT_HOMEPAGE_BASE}/0x${nextId}`\n          )\n        } catch(err) {\n          console.error('Get Token Id', err.message)\n        }\n      }\n    })())\n  }, [contract, purpose, homepage])\n\n  useEffect(() => {\n    if(location.hash) {\n      const elem = document.getElementById(\n        location.hash.substring(1)\n      )\n      window.scroll({\n        top: elem.offsetTop - 120,\n        behavior: 'smooth',\n      })\n    }\n  }, [location])\n\n  const configImage = ({ target: { files }}) => {\n    if(files.length === 1) {\n      setImage(files[0])\n    } else {\n      setImage(null)\n    }\n  }\n\n  const configAnimation = (evt) => {\n    const { target: { files }} = evt\n    if(files.length === 1) {\n      setAnimation(files[0])\n    } else {\n      setAnimation(null)\n    }\n    evt.preventDefault()\n  }\n\n  const addRow = () => {\n    setAttributes(attrs => [...attrs, {}])\n  }\n\n  const ipfsify = async (fileOrURL) => {\n    if(fileOrURL.startsWith?.('ipfs://')) return fileOrURL\n\n    const name = fileOrURL.name\n    const result = await ipfs.add(\n      { path: name, content: fileOrURL.content ?? fileOrURL },\n      { pin: true, wrapWithDirectory: true }\n    )\n    return `ipfs://${result.cid.toString()}/${name}`\n  }\n\n  const enact = useCallback(async (metadata) => {\n    try {\n      if(purpose === 'create') {\n        const enact = (\n          window.confirm(\n            `¿Mint ${quantity} token${\n              quantity === 1 ? '' : 's'\n            } to ${treasurer}?`\n          )\n        )\n        if(enact) {\n          const address = ensProvider.resolveName(treasurer)\n          await contract.mint(address, quantity, metadata, [])\n          history.push('/')\n        }\n      } else if(purpose === 'update') {\n        const [tokenId] = params.id.split('-').slice(-1)\n        await contract.setURI(metadata, parseInt(tokenId, 16))\n      }\n    } catch(err) {\n      toast({\n        title: 'Contract Error',\n        description: err.message,\n        status: 'error',\n        isClosable: true,\n        duration: 10000\n      })\n    }\n  }, [\n    purpose, contract, quantity, history, params.id,\n    treasurer, ensProvider, toast,\n  ])\n\n  const submit = async (evt) => {\n    evt.preventDefault()\n\n    const metadata = {\n      name: name ?? 'Untitled', description, decimals: 0,\n    }\n\n    if(!!homepage) {\n      metadata.external_url = homepage\n    }\n\n    if(image instanceof File) {\n      metadata.image = await ipfsify(image)\n    } else if(typeof image === 'string') {\n      metadata.image = image\n    } else if(image !== undefined) {\n      console.warn(`Unknown Image Type: ${typeof image}`)\n    }\n\n    if(animation instanceof File) {\n      metadata.animation_url = await ipfsify(animation)\n    } else if(typeof animation === 'string') {\n      metadata.animation_url = animation\n    } else if(animation !== undefined) {\n      console.warn(`Unknown Animation Type: ${typeof animation}`)\n    }\n\n    if(color.startsWith('#')) {\n      metadata.background_color = (\n        color.substring(1).toUpperCase()\n      )\n    }\n\n    metadata.properties = {}\n\n    if(Object.keys(wearables).length > 0) {\n      metadata.properties.wearables = (\n        Object.fromEntries(\n          await Promise.all(\n            Object.entries(wearables).map(\n              async ([type, value]) => (\n                [type, await ipfsify(value)]\n              )\n            )\n          )\n        )\n      )\n    }\n\n    if(attributes.length > 0) {\n      metadata.attributes = (\n        attributes.map(({ name, value, type }) => {\n          const attr = {\n            trait_type: name, \n            value,\n          }\n          // including a string type causes nothing to render\n          if(type !== 'string') {\n            attr.display_type = type\n          }\n          return attr\n        })\n      )\n    }\n\n    const dataURI = await ipfsify({\n      name: `metadata.${(new Date()).toISOString()}.json`,\n      content: JSON.stringify(metadata, null, '  '),\n    })\n\n    await enact(dataURI)\n  }\n\n  if(desiredNetwork) {\n    return (\n      <Heading size=\"sm\" mt={20} align=\"center\">\n        Please change your network to {desiredNetwork}.\n      </Heading>\n    )\n  }\n\n  return (\n    <Container\n      as=\"form\" onSubmit={submit}\n      mt={10} maxW={['100%', 'min(85vw, 50em)']}\n      sx={{ a: { textDecoration: 'underline' } }}\n    >\n      <Submit {...{ purpose, desiredNetwork }} mb={3}/>\n      <UnorderedList listStyleType=\"none\">\n        {purpose === 'create' && (\n          <ListItem ref={refs.quantity}>\n            <FormControl isRequired>\n              <Flex align=\"center\">\n                <Label name=\"Quantity to Mint\" box={refs.quantity}/>\n                <Input\n                  type=\"number\" autoFocus\n                  value={quantity}\n                  onChange={({ target: { value } }) => {\n                    setQuantity(value ? parseInt(value, 10) : '')\n                  }}\n                  placeholder=\"¿How many tokens to mint?\"\n                />\n              </Flex>\n            </FormControl>\n          </ListItem>\n        )}\n        {purpose === 'create' && (\n          <ListItem ref={refs.treasurer}>\n            <FormControl isRequired mt={3}>\n              <Flex align=\"center\">\n                <Label name=\"Treasurer\" box={refs.treasurer}/>\n                <Input\n                  type=\"text\"\n                  value={treasurer}\n                  onChange={({ target: { value } }) => (\n                    setTreasurer(value)\n                  )}\n                  placeholder=\"¿Who should receive the new tokens?\"\n                />\n              </Flex>\n            </FormControl>\n          </ListItem>\n        )}\n        <ListItem ref={refs.name}>\n          <FormControl mt={3}>\n            <Flex align=\"center\">\n              <Label name=\"Name\" box={refs.name}/>\n              <Input\n                value={name} autoFocus={purpose !== 'create'}\n                onChange={({ target: { value } }) => setName(value)}\n              />\n            </Flex>\n          </FormControl>\n        </ListItem>\n        <ListItem>\n          <ExpandShow name=\"Image\">\n            <Box m={3}>\n              <Input\n                type=\"file\" accept=\"image/*\"\n                ref={imageRef} onChange={configImage}\n                display={image ? 'none' : 'inherit'}\n                h=\"auto\"\n              />\n              {image && (<Image\n                src={\n                  (image instanceof File) ? (\n                    URL.createObjectURL(image)\n                  ) : (\n                    httpURL(image)\n                  )\n                }\n                maxH={60} mt={0} bg={color}\n                onClick={() => imageRef.current?.click()}\n              />)}\n            </Box>\n          </ExpandShow>\n        </ListItem>\n        <ListItem ref={refs.background}>\n          <FormControl mt={3}>\n            <Flex align=\"center\">\n              <Label name=\"Background Color\" box={refs.background}/>\n              <Input\n                type=\"color\" value={color}\n                onChange={({ target: { value }}) => setColor(value)}\n              />\n            </Flex>\n          </FormControl>\n        </ListItem>\n        <ListItem ref={refs.homepage}>\n          <FormControl mt={3}>\n            <Flex align=\"center\">\n              <Label name=\"Homepage\" box={refs.homepage}/>\n              <Input\n                value={homepage}\n                onChange={({ target: { value } }) => (\n                  setHomepage(value)\n                )}\n              />\n              {homepage?.length > 0 && (\n                <chakra.a ml={2} href={homepage} target=\"_blank\">\n                  <ExternalLinkIcon/>\n                </chakra.a>\n              )}\n            </Flex>\n          </FormControl>\n        </ListItem>\n        <ListItem>\n          <ExpandShow name=\"Description\">\n            <Tabs ml={5} isFitted variant=\"enclosed\">\n              <TabList mb=\"1em\">\n                <Tab>Markdown</Tab>\n                <Tab>Preview</Tab>\n              </TabList>\n              <TabPanels>\n                <TabPanel>\n                  <Textarea\n                    placeholder=\"Enter a markdown formatted description.\"\n                    value={description} minH={32}\n                    onChange={({ target: { value } }) => (\n                      setDescription(value)\n                    )}\n                  />\n                </TabPanel>\n                <TabPanel>\n                  <ReactMarkdown>\n                    {description}\n                  </ReactMarkdown>\n                </TabPanel>\n              </TabPanels>\n            </Tabs>\n          </ExpandShow>\n        </ListItem>\n        <ListItem>\n          <ExpandShow name=\"Animation\">\n            <Box m={3}>\n              {typeof animation === 'string' && (\n                <Flex>\n                  <Text>\n                    {decodeURI(animation.replace(\n                      /^ipfs:\\/\\/[^/]+\\//, ''\n                    ))}\n                  </Text>\n                  <chakra.a href={httpURL(animation)} ml={3} mb={5}>\n                    <ExternalLinkIcon/>\n                  </chakra.a>\n                </Flex>\n              )}\n              {animation instanceof File && (\n                <Flex>\n                  <Text>{animation.name}</Text>\n                  <chakra.a\n                    href={URL.createObjectURL(animation)}\n                    target=\"_blank\" ml={3} mb={5}\n                  >\n                    <ExternalLinkIcon/>\n                  </chakra.a>\n                </Flex>\n              )}\n              <Input\n                type=\"file\"\n                accept=\"model/gltf+json,model/gltf-binary,video/*,.gltf,.glb\"\n                onChange={configAnimation}\n                h=\"auto\"\n              />\n            </Box>\n          </ExpandShow>\n        </ListItem>\n        <ListItem id=\"attributes\">\n          <ExpandShow\n            name=\"Attributes\"\n            button={<Button ml={2} onClick={addRow} size=\"xs\">\n              <AddIcon/>\n            </Button>}\n          >\n            {attributes.length > 0 && (\n              <Table\n                sx={{ 'th, td': { textAlign: 'center' } }}\n              >\n                <Thead>\n                  <Tr>\n                    <Th>Name</Th>\n                    <Th>Value</Th>\n                    <Th>Type</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {attributes.map((_, index) => (\n                    <AttrRow {...{\n                      attributes, setAttributes,\n                      index, key: index,\n                    }}/>\n                  ))}\n                </Tbody>\n              </Table>\n            )}\n          </ExpandShow>\n        </ListItem>\n        <ListItem>\n          <ExpandShow\n            name=\"Models\"\n            button={<Button ml={2} onClick={onOpen} size=\"xs\">\n              <AddIcon/>\n            </Button>}\n          >\n            {Object.keys(wearables).length === 0 ? (\n              <em>None</em>\n            ) : (\n              <UnorderedList>\n                {Object.entries(wearables).map(\n                  ([mimetype, model], idx) => (\n                    <ListItem key={idx}>\n                      <a href={httpURL(model)}>{mimetype}</a>\n                    </ListItem>\n                  )\n                )}\n              </UnorderedList>\n            )}\n            <ModelModal\n              {...{\n                isOpen, onClose, setWearables,\n              }}\n            />\n          </ExpandShow>\n        </ListItem>\n      </UnorderedList>\n      <Submit {...{ purpose, desiredNetwork }} mt={3}/>\n    </Container>\n  )\n}","import { Container } from '@chakra-ui/react'\nimport React from 'react'\nimport NFTForm from '../components/NFTForm'\n\nexport default (props) => {\n  if (!props.contract) {\n    return (\n      <Container align=\"center\" mt={10}>\n        ¡Missing Contract! ¿Are you connected?\n      </Container>\n    )\n  }\n\n  return (\n    <NFTForm purpose=\"create\" {...props}/>\n  )\n}","import React, { useCallback, useEffect , useState} from 'react'\nimport {\n  Alert, AlertIcon, Spinner, Button, Tooltip,\n  Table, Thead, Tbody, Tr, Th, Td, useDisclosure,\n  Box, Image, Flex, Heading, useToast,\n  useBreakpointValue, useColorMode,\n} from '@chakra-ui/react'\nimport { useQuery, gql } from '@apollo/client'\nimport { useParams } from 'react-router'\nimport Address from '../components/Address'\nimport Distribute from '../components/DistributeModal'\nimport { httpURL } from '../helpers'\nimport contractAddress from '../contracts/WearablesNFTs.address'\n\n// const TOKEN = gql(`\n//   query GetToken($id: String!) {\n//     token(id: $id) {\n//       identifier\n//       totalSupply\n//       balances {\n//         account { id }\n//         value\n//       }\n//       URI\n//     }\n//   }\n// `)\n\nconst TOKEN = gql`\n  query GetToken($id: String!, $contract: String!) {\n    nfts(where: {\n      tokenID: $id\n      contract: $contract\n    }) {\n      tokenID\n      tokenURI\n      ownership {\n        owner\n        quantity\n      }\n      creatorName\n      creatorAddress\n    }\n  }\n`\n\nexport default ({\n  ensProvider, address, contract, desiredNetwork,\n}) => {\n  const [balances, setBalances] = useState(null)\n  const [quantity, setQuantity] = useState(null)\n  const [tokenId, setTokenId] = useState(null)\n  const [total, setTotal] = useState(null)\n  const [meta, setMeta] = useState(<Spinner/>)\n  const { colorMode }= useColorMode()\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const toast = useToast()\n  const params = useParams()\n  const addrSize = (\n    useBreakpointValue(['shortest', 'medium'])\n  )\n  const threeCol = useBreakpointValue([false, true])\n\n  let id = params.id?.toLowerCase()\n  // if(!id.includes('-')) {\n  //   if(!id.startsWith('0x')) id = `0x${id}`\n  //   id = `${contractAddress.toLowerCase()}-${id}`\n  // }\n  contractAddress = contractAddress.toLowerCase()\n\n  let { loading, error, data } = useQuery(\n    TOKEN, { variables: { id, contract: contractAddress } },\n  )\n\n  console.info({ loading, error, data })\n\n  const config = () => {\n    if(desiredNetwork) {\n      toast({\n        title: 'Connection Error',\n        description: `Connect to the ${desiredNetwork} network to distribute.`,\n        status: 'error',\n        duration: 7000,\n        isClosable: true,\n      })\n    } else {\n      setQuantity(balances[address.toLowerCase()])\n      onOpen()\n    }\n  }\n  const distribute = useCallback(async (recipients) => {\n    try {\n      recipients = await Promise.all(\n        recipients.map(async (r) => (\n          await ensProvider.resolveName(r)\n        ))\n      )\n      await contract.distributeSingles(\n        address, recipients, tokenId, []\n      )\n    } catch(err) {\n      const cause = err.error ?? err\n      console.error('Error Distributing', err)\n      toast({\n        title: \"Couldn't Distribute\",\n        description: cause.message,\n        status: 'error',\n        duration: null,\n        isClosable: true,\n      })\n      throw cause\n    }\n  }, [ensProvider, contract, tokenId, address, toast])\n\n  useEffect(() => {\n    if(data?.token) {\n      const { balances, totalSupply, identifier, URI } = (\n        data.token\n      )\n      const quantities = Object.fromEntries(\n        balances.map((bal) => [\n          bal.account.id,\n          parseInt(bal.value, 10),\n        ])\n      )\n      setBalances(quantities)\n      setTotal(totalSupply)\n      setTokenId(identifier)\n\n      fetch(httpURL(URI))\n      .then(res => res.json())\n      .then((meta) => {\n        setMeta(\n          <Flex justify=\"center\" m={8}>\n            <Image\n              src={httpURL(meta.image)}\n              maxH=\"3rem\" mr={5} ml={5}\n            />\n            <Heading size=\"lg\">{meta.name}</Heading>\n          </Flex>\n        )\n      })\n    }\n  }, [data])\n\n  if(loading) {\n    return <Spinner/>\n  }\n\n  if(!balances || balances.length === 0) {\n    error = error ?? \"Couldn't find any balances.\"\n  }\n\n  if(error) {\n    return (\n      <Alert status=\"error\">\n        <AlertIcon />\n        {error}\n      </Alert>\n    )\n  }\n\n  return (\n    <Box>\n      <Distribute {...{ isOpen, onClose, quantity, distribute }}/>\n      {meta}\n      <Table sx={{ 'th, td': { textAlign: 'center' } }}>\n        <Thead\n          position=\"sticky\" top={[0, 14]} zIndex={1}\n          bg={colorMode === 'dark' ? 'gray.800' : 'white'}\n        >\n          <Tr>\n            {threeCol ? (\n              <>\n                <Th textAlign=\"center\">\n                  Quantity {total && `(${total})`}\n                </Th>\n                <Th>Owner</Th>\n              </>\n            ) : (\n              <Th>Owner {total && `(${total})`}</Th>\n            )}\n            <Th>Actions</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {Object.entries(balances).map(([account, amount]) => (\n            <Tr key={account}>\n              {threeCol && <Td>{amount}</Td>}\n              <Td>\n                {threeCol || `(${amount})`}\n                <Address\n                  value={account} size={addrSize}\n                  {...{ ensProvider }}\n                />\n              </Td>\n              <Td>\n                {account?.localeCompare(\n                  address, undefined, { sensitivity: 'base' }\n                ) === 0 && (\n                  <Tooltip hasArrow label=\"Distribute\">\n                    <Button onClick={config}>\n                      <span role=\"img\" aria-label=\"Distribute\">\n                        ⛲\n                      </span>\n                    </Button>\n                  </Tooltip>\n                )}\n              </Td>\n            </Tr>\n          ))}\n        </Tbody>\n      </Table>\n    </Box>\n  )\n}","import React, { useCallback, useEffect, useState } from 'react'\nimport {\n  Alert, AlertIcon, Button, Spinner, Image, Tooltip,\n  Table, Thead, Tbody, Tr, Th, Td, Container, Box, useColorMode,\n} from '@chakra-ui/react'\nimport { ExternalLinkIcon } from '@chakra-ui/icons'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useQuery, gql } from '@apollo/client'\nimport demarkdown from 'remove-markdown'\nimport registryAddress from '../contracts/WearablesNFTs.address'\nimport { httpURL } from '../helpers'\n\n// const TOKENS = gql(`\n//   query GetTokens {\n//     tokenRegistry(id: \"${registryAddress.toLowerCase()}\") {\n//       id\n//       tokens {\n//         id\n//         URI\n//         totalSupply\n//       }\n//     }\n//   }\n// `)\n\nconst TOKENS = gql`\n  query GetTokens($contract: String!) {\n    nftContracts(where: { id: $contract }) {\n      name\n      symbol\n      nfts {\n        tokenID\n        tokenURI\n        ownership {\n          owner\n          quantity\n        }\n        creatorName\n        creatorAddress\n      }\n    }\n  }\n`\n\nexport default ({ action = null }) => {\n  const contract = registryAddress.toLowerCase()\n  const { loading, error, data } = (\n    useQuery(TOKENS, { variables: { contract } })\n  )\n\n  console.info({ loading, error, data })\n\n  const [tokens, setTokens] = useState(null)\n  const { colorMode } = useColorMode()\n  const history = useHistory()\n  const load = useCallback(async () => {\n    if(data) {\n      const tokenData = data.nftContracts?.nfts\n      if(!tokenData) {\n        return setTokens([])\n      }\n\n      const tokens = tokenData.map((token) => ({\n        loading: true,\n        id: token.tokenID,\n        // supply: token.totalSupply,\n        metadata: token.tokenURI,\n      }))\n      setTokens(tokens)\n\n      const uris = [...new Set([...tokens.map(({ metadata: m })=> m)])]\n      await Promise.all(uris.map(async (uri) => {\n        const response = await fetch(httpURL(uri))\n        if(response.ok) {\n          const meta = await response.json()\n          setTokens((tokens) => {\n            return tokens.map((tkn) => {\n              if(tkn.metadata !== uri) {\n                return tkn\n              } else {\n                return {\n                  ...tkn,\n                  loading: false,\n                  name: meta.name,\n                  description: demarkdown(meta.description),\n                  image: httpURL(meta.image),\n                }\n              }\n            })\n          })\n        }\n      }))\n    }\n  }, [data])\n\n  useEffect(() => { load() }, [load])\n\n  if(error) {\n    return (\n      <Container mt={10}>\n        <Alert status=\"error\">\n          <AlertIcon />\n          {error}\n        </Alert>\n      </Container>\n    )\n  }\n\n  if(!tokens || loading) {\n    return (\n      <Box align=\"center\" my={10}>\n        <Spinner/>\n      </Box>\n    )\n  }\n\n  if(tokens.length === 0) {\n    return (\n      <Container align=\"center\">\n        <h2>No Tokens Have Been Created Yet</h2>\n        <h2><em>(If you just minted a token, it may take several seconds for The Graph to add the new token to its index.)</em></h2>\n        <Link to=\"/new\"><Button>Create One</Button></Link>\n      </Container>\n    )\n  }\n\n  return (\n    <Table\n      sx={{ 'th, td': { textAlign: 'center' } }}\n    >\n      <Thead>\n        <Tr\n          position=\"sticky\" top={[0, 14]} zIndex={1}\n          bg={colorMode === 'dark' ? 'gray.800' : 'white'}\n        >\n          <Th>Name</Th>\n          <Th>Image</Th>\n          <Th display={['none', 'table-cell']}>Description</Th>\n          <Th display={['none', 'table-cell']}>Supply</Th>\n          <Th display={['none', 'table-cell']}>Metadata</Th>\n          {!action && <Th>Actions</Th>}\n        </Tr>\n      </Thead>\n      <Tbody>\n        {tokens.map((token, idx) => {\n          const redirect = () => {\n            if(action) {\n              history.push(`/${action}/${token.id}`)\n            }\n          }\n          return (\n            <Tr\n              id={`token-${token.metadata}`}\n              key={idx} onClick={redirect}\n              _hover={{ bg: action ? '#F3FF0033' : '#0000FF11' }}\n            >\n              <Td>{token.loading ? <Spinner/> : (\n                token.name ?? <em>Unnamed</em>\n              )}</Td>\n              <Td>{token.loading ? <Spinner/> : (\n                <a\n                  href={token.image}\n                  target=\"_blank\" rel=\"noopener noreferrer\"\n                >\n                  <Image maxH={20} m=\"auto\" src={token.image}/>\n                </a>\n                ?? <em>No Image</em>\n              )}</Td>\n              <Td display={['none', 'table-cell']}>\n                {token.loading ? <Spinner/> : (\n                  token.description ? (\n                    `${\n                      token.description.substring(0, 30)\n                    }${\n                      token.description.substring(30).split(' ')[0]\n                    }${\n                      token.description.length > 30 ? '…' : ''\n                    }`\n                  ) : (\n                    <em>No Description</em>\n                  )\n                )}\n              </Td>\n              <Td display={['none', 'table-cell']}>\n                {token.supply}\n              </Td>\n              <Td display={['none', 'table-cell']}>\n                <a href={token.metadata}>\n                  <Button><ExternalLinkIcon/></Button>\n                </a>\n              </Td>\n              {!action && (\n                <Td>\n                  {\n                    Object.entries({\n                      disburse: { title: 'Distribute', icon: '⛲' },\n                      view: { title: 'View', icon: '👁️' },\n                      edit: { title: 'Edit', icon: '✏️' },\n                    })\n                    .map(([action, { title, icon }]) => (\n                      <Tooltip\n                        label={title} key={action}\n                        hasArrow placement=\"left\"\n                      >\n                        <Link\n                          to={`/${action}/${token.id}`}\n                          {...{ title }}\n                        >\n                          <Button\n                            borderWidth={3} variant=\"outline\"\n                            _hover={{ bg: '#00FF0044' }}\n                          >\n                            <span role=\"img\" aria-label={title}>\n                              {icon}\n                            </span>\n                          </Button>\n                        </Link>\n                      </Tooltip>\n                    ))\n                  }\n                </Td>\n              )}\n            </Tr>\n          )\n        })}\n      </Tbody>\n    </Table>\n  )\n}\n","import React from 'react'\nimport { Heading } from '@chakra-ui/react'\nimport { useParams } from 'react-router-dom'\nimport DisburseNFTs from './DisburseNFTs'\nimport NFTList from './NFTList'\n\nexport default (props) => {\n  const params = useParams()\n\n  if(params.id) {\n    return <DisburseNFTs {...props}/>\n  }\n  return (\n    <>\n      <Heading align=\"center\" m={8}>\n        Select A NFT To Distribute\n      </Heading>\n      <NFTList {...props} action=\"disburse\"/>\n    </>\n  )\n}","import {\n  Spinner, Container, Box, Alert, AlertIcon,\n} from '@chakra-ui/react'\nimport { useQuery, gql } from '@apollo/client'\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport { useLocation } from 'react-router-dom'\nimport contractAddress from '../contracts/WearablesNFTs.address'\nimport { httpURL } from '../helpers'\nimport EditOrList from './EditOrList'\nimport NFTForm from '../components/NFTForm'\n\nconst TOKEN = gql(`\n  query GetToken($id: String!) {\n    token(id: $id) {\n      identifier\n      URI\n    }\n  }\n`)\n\nconst useQueryParams = () => (\n  new URLSearchParams(useLocation().search)\n)\n\nexport default ({ contract, desiredNetwork }) => {\n  const [metadata, setMetadata] = useState()\n  \n  const params = useParams()\n  let id = params.id?.toLowerCase()\n  if(!id.includes('-')) {\n    if(!id.startsWith('0x')) id = `0x${id}`\n    id = `${contractAddress.toLowerCase()}-${id}`\n  }\n\n  let { loading, error, data } = useQuery(\n    TOKEN, { variables: { id } },\n  )\n\n  useEffect(() => {\n    if(data?.token) {\n      ;(async () => {\n        const res = await fetch(httpURL(data.token.URI))\n        if(res.ok) {\n          try {\n            const metadata = await res.json()\n            setMetadata(metadata)\n          } catch(err) { // invalid JSON\n            setMetadata(null)\n          }\n        } else {\n          console.error('Metadata Response', res)\n        }\n      })()\n    }\n  }, [data])\n\n  if(id === undefined) {\n    return (\n      <EditOrList {...{ contract, desiredNetwork }}/>\n    )\n  }\n\n  if(error) {\n    return (\n      <Container mt={10}><Alert status=\"error\">\n        <AlertIcon />\n        {error}\n      </Alert></Container>\n    )\n  }\n\n  if(metadata === undefined || loading) {\n    return (\n      <Box align=\"center\" mt={10}>\n        <Spinner size=\"lg\"/>\n      </Box>\n    )\n  }\n\n  return (\n    <NFTForm\n      purpose=\"update\" {...{ metadata }}\n      {...{ contract, desiredNetwork }}\n    />\n  )\n}","import React from 'react'\nimport { Heading } from '@chakra-ui/react'\nimport { useParams } from 'react-router-dom'\nimport UpdateNFT from './UpdateNFT'\nimport NFTList from './NFTList'\n\nexport default (props) => {\n  const params = useParams()\n\n  if(params.id) {\n    return <UpdateNFT {...props}/>\n  }\n  \n  return (\n    <>\n      <Heading align=\"center\" m={8}>\n        Select A NFT To Edit\n      </Heading>\n      <NFTList action=\"edit\"/>\n    </>\n  )\n}","import {\n  Spinner, Container, UnorderedList, ListItem, Box,\n  Image, Heading, Alert, AlertIcon, useToast, Flex, Text, Link,\n} from '@chakra-ui/react'\nimport { useQuery, gql } from '@apollo/client'\nimport React, { useEffect, useState, Suspense } from 'react'\nimport { useParams } from 'react-router'\nimport ReactMarkdown from 'react-markdown'\nimport contractAddress from '../contracts/WearablesNFTs.address'\nimport { httpURL } from '../helpers'\nimport EditOrList from './EditOrList'\nimport { useHistory } from 'react-router-dom'\nimport { Box3, Vector3, Color } from 'three'\nimport { Canvas } from '@react-three/fiber'\nimport { OrbitControls, useGLTF, Center, Environment } from '@react-three/drei'\nimport { Helmet } from 'react-helmet'\n\n// const TOKEN = gql(`\n//   query GetToken($id: String!) {\n//     token(id: $id) {\n//       identifier\n//       URI\n//     }\n//   }\n// `)\n\nconst TOKEN = gql`\n  query GetToken($id: String!, $contract: String!) {\n    nfts(where: {\n      tokenID: $id\n      contract: $contract\n    }) {\n      tokenID\n      tokenURI\n      ownership {\n        owner\n        quantity\n      }\n      creatorName\n      creatorAddress\n    }\n  }\n`\n\nexport default (props) => {\n  const [metadata, setMetadata] = useState()\n  const [tokenId, setTokenId] = useState()\n  const homepage = metadata?.external_url\n  const wearables = metadata?.properties?.wearables ?? {}\n  const history = useHistory()\n  const params = useParams()\n  const toast = useToast()\n\n  const Scene = ({ source }) => {\n    const { scene } = useGLTF(source)\n    const bBox = new Box3()\n    bBox.setFromObject(scene)\n    const size = bBox.getSize(new Vector3()).length();\n    const fov = 50\n    const near = size / 100;\n    const far = size * 100;\n    const position = [0, 0, size]\n    const lights = [[0, 0, size], [0, 0, -size]]\n    return (\n      <Canvas\n        style={{ height: '100%' }}\n        camera={{ position, fov, near, far }}\n      >\n        {metadata?.background_color && (\n          <color attach=\"background\" args={[`#${metadata.background_color}`]}/>\n        )}\n        <Center>\n          <primitive object={scene}/>\n        </Center>\n        <ambientLight intensity={0.1} />\n        {lights.map((light, idx) => (\n          <directionalLight key={idx} position={light} intensity={0.75}/>\n        ))}\n        <OrbitControls />\n      </Canvas>\n    )\n  }\n\n  const Model = ({ source }) => {\n    source = source ?? wearables?.['model/gltf-binary']\n    if(!source) throw new Error('¡No source specified for Model!')\n    return (\n      <Suspense fallback={null}>\n        <Scene {...{ source }}/>\n      </Suspense>\n    )\n  }\n\n  let id = params.id?.toLowerCase()\n  // if(!id.includes('-')) {\n  //   if(!id.startsWith('0x')) id = `0x${id}`\n  //   id = `${contractAddress.toLowerCase()}-${id}`\n  // }\n  contractAddress = contractAddress.toLowerCase()\n\n  let { loading, error: qError, data } = useQuery(\n    TOKEN, { variables: { id, contract: contractAddress } },\n  )\n\n  console.debug('NFTDetails', { loading, qError, data })\n\n  const [error, setError] = useState(qError)\n\n  useEffect(() => {\n    if(data) {\n      if(!data.token) {\n        let msg = `No data returned for the token ${id}.`\n        if(props.desiredNetwork) {\n          msg += ` You are not connected to the ${props.desiredNetwork} network…`\n        }\n        setError(msg)\n      } else {\n        setError(null)\n        setTokenId(data.token.identifier)\n\n        ;(async () => {\n          const res = await fetch(httpURL(data.token.URI))\n          if(res.ok) {\n            try {\n              const metadata = await res.json()\n              metadata.uri = httpURL(data.token.URI)\n              setMetadata(metadata)\n            } catch(err) { // invalid JSON\n              setMetadata(null)\n            }\n          } else {\n            console.error('Metadata Response', res)\n            toast({\n              title: 'Query Error',\n              description: res.error,\n              status: 'error',\n              duration: null,\n              isClosable: true,\n            })\n          }\n        })()\n      }\n    }\n  }, [data, id, props.desiredNetwork, toast])\n\n  if(id === undefined) {\n    return (\n      <EditOrList {...props}/>\n    )\n  }\n\n  if(error) {\n    return (\n      <Container mt={10}><Alert status=\"error\">\n        <AlertIcon />\n        {error}\n      </Alert></Container>\n    )\n  }\n\n  if(metadata === undefined || loading) {\n    return (\n      <Box align=\"center\" my={10}>\n        <Spinner size=\"lg\"/>\n      </Box>\n    )\n  }\n\n  if(metadata === null) {\n    history.push(`/edit/${id}`)\n  }\n\n  return (\n    <>\n      <Helmet>\n        {/* This won't work, more than likely… */}\n        {metadata.image && (\n          <meta property=\"og:image\" content={httpURL(metadata.image)}></meta>\n        )}\n        {metadata.name && (\n          <meta property=\"og:title\" content={metadata.name}></meta>\n        )}\n      </Helmet>\n      <Container sx={{ a: { textDecoration: 'underline' } }}>\n        <Heading size=\"lg\" my={5} align=\"center\">\n          {metadata.name}\n        </Heading>\n        <Flex direction={{ base: 'column', sm: 'row' }} align=\"center\">\n          <Box\n            minW={[\"100vmin\", \"50%\"]}\n            paddingTop={['100vmin', \"50%\"]}\n            position=\"relative\" border=\"2px solid black\"\n            alignSelf={['center', 'start']} justifySelf=\"center\"\n          >\n            <Box\n              position=\"absolute\"\n              top={0} bottom={0} left={0} right={0}>\n              {wearables['model/gltf-binary'] ? (\n                <Model/>\n              ) : (\n                <Image src={httpURL(metadata.image)}/>\n              )}\n            </Box>\n          </Box>\n          <Box\n            ml={5} sx={{\n              hr: { my: 3 },\n              'p, li': { mb: 3, textAlign: 'justify' },\n            }}>\n            <ReactMarkdown linkTarget=\"_blank\">\n              {metadata.description}\n            </ReactMarkdown>\n          </Box>\n        </Flex>\n        {homepage && (\n          <Link href={homepage} isExternal title=\"Homepage\">\n            🏡\n          </Link>\n        )}\n        {metadata?.uri && (\n          <Link href={metadata.uri} ml={3} isExternal title=\"Metadata\">\n            🗄\n          </Link>\n        )}\n        <Heading size=\"sm\">Models:</Heading>\n        {Object.keys(wearables).length === 0 ? (\n          <Text><em>None</em></Text>\n        ) : (\n          <UnorderedList>\n            {Object.entries(wearables).map(\n              ([mimetype, model]) => (\n                <ListItem key={mimetype}>\n                  <a href={httpURL(model)}>{mimetype}</a>\n                </ListItem>\n              )\n            )}\n          </UnorderedList>\n        )}\n      </Container>\n    </>\n  )\n}","import React from 'react'\nimport { Heading } from '@chakra-ui/react'\nimport { useParams } from 'react-router-dom'\nimport NFTDetails from './NFTDetails'\nimport NFTGrid from './NFTGrid'\n\nexport default (props) => {\n  const params = useParams()\n\n  if(params.id) {\n    return <NFTDetails {...props}/>\n  }\n  return <NFTGrid action=\"view\"/>\n}","import { Table, Thead, Tbody, Tr, Th, Td } from '@chakra-ui/react'\nimport { Container, Input, Stack } from '@chakra-ui/react'\nimport React, { useEffect, useState } from 'react'\nimport { WearablesNFTs } from '../contracts/contracts'\n\nexport default () => null\n\n// const MintToggle = ({ address }) => {\n//   const [loading, setLoading] = useState(true)\n//   const [able, setAble] = useState(null)\n//   const role = useMemo(\n//     () => web3.utils.soliditySha3('MINTER_ROLE'),\n//     [],\n//   )\n\n//   if(loading) {\n//     return <Spinner/>\n//   }\n\n//   useEffect(() => {\n//     (async () => {\n//       setAble(\n//         await contract.hasRole(address, role)\n//       )\n//       setLoading(false)\n//     })()\n//   }, [address, role])\n\n//   const onClick = (evt) => {\n//     setLoading(true)\n//     const makeAble = evt.target.checked\n//     try {\n//       if(makeAble) {\n//         contract.grantRole(address, role)\n//       } else {\n//         contract.revokeRole(address, role)\n//       }\n//       setAble(makeAble)\n//     } catch(err) {\n//       alert(err.message)\n//     } finally {\n//       setLoading(false)\n//     }\n//   }\n\n//   return (\n//     <Button\n//       {...{ onClick }}\n//     >\n//       {able ? '❌' : '✔'}\n//     </Button>\n//   )\n// }\n// const MetadataToggle = ({ address }) => (\n//   null\n// )\n\n// export default (props) => {\n//   const [addrs, setAddrs] = useState([])\n//   const [addr, setAddr] = useState('')\n\n//   const onSubmit = (evt) => {\n//     evt.preventDefault()\n//     if(/^(0x)?[a-z0-9]{40}$/i.test(addr)) {\n//       console.info('Adding:', addr, [...new Set([...addrs, addr])])\n//       setAddrs((addrs) => (\n//         [...new Set([...addrs, addr])]\n//       ))\n//     } else {\n//       console.info('Skipping:', addr)\n//     }\n//   }\n\n//   const onChange = (evt) => {\n//     setAddr(evt.target.value)\n//   }\n\n//   return (\n//     <Stack>\n//       <Container as=\"form\" {...{ onSubmit }}>\n//         <Input\n//           name=\"address\"\n//           placeholder=\"ETH Address To Manage\"\n//           value={addr} {...{ onChange }}\n//         />\n//         <Input type=\"submit\" value=\"Add\"/>\n//       </Container>\n//       <Table>\n//         <Thead><Tr>\n//           <Th>Address</Th>\n//           <Th>Can mint?</Th>\n//           <Th>Manages metadata?</Th>\n//         </Tr></Thead>\n//         <Tbody>\n//           {addrs.map((addr) => (\n//             <Tr key={addr}>\n//               <Td>{addr}</Td>\n//               <Td><MintToggle address={addr}/></Td>\n//               <Td><MetadataToggle address={addr}/></Td>\n//             </Tr>\n//           ))}\n//         </Tbody>\n//       </Table>\n//     </Stack>\n//   )\n// }","import React, { useCallback, useEffect, useState } from 'react'\nimport {\n  HashRouter as Router, Switch, Route,\n} from 'react-router-dom'\nimport {\n  StaticJsonRpcProvider, Web3Provider,\n} from '@ethersproject/providers'\nimport { Box } from '@chakra-ui/react'\nimport Web3Modal from 'web3modal'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { Helmet } from 'react-helmet'\nimport {\n  useContractLoader, useLookupAddress, useUserAddress,\n} from './hooks'\nimport { Header } from './components'\nimport { INFURA_ID, NETWORK, NETWORKS } from './constants'\nimport ExistingNFTs from './views/NFTGrid'\nimport CreateNFT from './views/CreateNFT'\nimport DisburseOrList from './views/DisburseOrList'\nimport EditOrList from './views/EditOrList'\nimport ViewOrList from './views/ViewOrList'\nimport { capitalize } from './helpers'\nimport ManageRoles from './views/ManageRoles'\n\nconst targetNetwork = NETWORKS.matic\nconst mainnetInfura = (\n  new StaticJsonRpcProvider(NETWORKS.mainnet.rpcUrl)\n)\nconst mainnetProvider = mainnetInfura\n\n// let localProviderUrl = targetNetwork.rpcUrl\n// localProviderUrl = (\n//   process.env.REACT_APP_PROVIDER ?? localProviderUrl\n// )\n// const localProvider = new StaticJsonRpcProvider(localProviderUrl)\n\nconst blockExplorer = targetNetwork.blockExplorer\n\nconst web3Modal = new Web3Modal({\n  network: targetNetwork.name, // optional\n  cacheProvider: true,         // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID,\n      },\n    },\n  },\n})\n\nexport default () => {\n  const [injectedProvider, setInjectedProvider] = useState()\n  const address = useUserAddress(injectedProvider)\n  const ensName = useLookupAddress({ provider: mainnetProvider, address })\n  const writeContracts = useContractLoader(injectedProvider)\n  const [desiredNetwork, setDesiredNetwork] = (\n    useState(targetNetwork.name)\n  )\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect()\n    setInjectedProvider(new Web3Provider(provider))\n  }, [setInjectedProvider])\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider()\n    setInjectedProvider(null)\n  }\n\n  useEffect(() => {\n    const chainSub = window.ethereum?.on(\n      'chainChanged', loadWeb3Modal\n    )\n    const accountSub = window.ethereum?.on(\n      'accountsChanged', loadWeb3Modal\n    )\n    return () => {\n      let _ = window.ethereum?.unsubscribe?.(chainSub)\n      _ = window.ethereum?.unsubscribe?.(accountSub)\n    }\n  }, [loadWeb3Modal])\n\n  useEffect(() => {\n    (async () => {\n      const chainId = (await injectedProvider?.getNetwork())?.chainId\n      setDesiredNetwork(\n        chainId !== targetNetwork.chainId ? (\n          capitalize(targetNetwork.name)\n        ) : (\n          null\n        )\n      )\n    })()\n  }, [injectedProvider])\n\n  useEffect(() => {\n    if(web3Modal.cachedProvider) {\n      loadWeb3Modal()\n    }\n  }, [loadWeb3Modal])\n\n  return (\n    <Box className=\"App\">\n      <Helmet>\n        <title>MetaFactory Wearables</title>\n      </Helmet>\n      <Router>\n        <Header\n          minH={16} pl={10} pt={5}\n          {...{\n            NETWORK,\n            targetNetwork,\n            address,\n            injectedProvider,\n            mainnetProvider,\n            web3Modal,\n            loadWeb3Modal,\n            logoutOfWeb3Modal,\n            blockExplorer,\n            targetChainId: targetNetwork.chainId,\n          }}\n        />\n\n        <Switch>\n          <Route path='/new'>\n            <CreateNFT\n              {...{ desiredNetwork }}\n              contract={writeContracts?.WearablesNFTs}\n              ensProvider={mainnetProvider}\n              treasurer={ensName}\n            />\n          </Route>\n          <Route path='/edit/:id?'>\n            <EditOrList\n              {...{ desiredNetwork }}\n              contract={writeContracts?.WearablesNFTs}\n            />\n          </Route>\n          <Route path='/view/:id?'>\n            <ViewOrList {...{ desiredNetwork }}/>\n          </Route>\n          <Route path='/manage'>\n            <ManageRoles {...{ desiredNetwork }}/>\n          </Route>\n          <Route path='/disburse/:id?'>\n            <DisburseOrList\n              {...{ address, desiredNetwork }}\n              ensProvider={mainnetProvider}\n              contract={writeContracts?.WearablesNFTs}\n            />\n          </Route>\n          <Route path='/'>\n            <ExistingNFTs ensProvider={mainnetProvider}/>\n          </Route>\n        </Switch>\n      </Router>\n    </Box>\n  )\n}","import { useState, useEffect } from 'react'\n\nexport default (provider) => {\n  const [userAddress, setUserAddress] = useState(null)\n\n  useEffect(() => {\n    (async () => {\n      setUserAddress(await provider?.getSigner().getAddress())\n    })()\n  }, [provider])\n\n  return userAddress\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  ApolloClient, ApolloProvider, InMemoryCache,\n} from '@apollo/client'\nimport {\n  ChakraProvider, extendTheme, ColorModeScript,\n} from '@chakra-ui/react'\nimport App from './App'\nimport { SUBGRAPH_URI } from './constants'\n\nconst client = new ApolloClient({\n  uri: SUBGRAPH_URI,\n  cache: new InMemoryCache(),\n})\n\nconst config = {\n  useSystemColorMode: false,\n  initialColorMode: 'dark',\n}\n\nconst theme = extendTheme({ config })\n  // styles: {\n  //   global: {\n  //     // body: {\n  //     //   bg: 'red',\n  //     //   color: \"white\",\n  //     // },\n  //   },\n  // },\n// })\n\nReactDOM.render(\n  <ApolloProvider {...{ client }}>\n    <ChakraProvider {...{ theme }}>\n      <ColorModeScript\n        initialColorMode={theme.config.initialColorMode}\n      />\n      <App/>\n    </ChakraProvider>\n  </ApolloProvider>,\n  document.getElementById('root'),\n)","module.exports = __webpack_public_path__ + \"static/media/ethereum.ec81052f.svg\";","var map = {\n\t\"./WearablesNFTs.abi.js\": 1128\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 614;","var map = {\n\t\"./WearablesNFTs.bytecode.js\": 1129\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 615;","module.exports = [\"WearablesNFTs\"];","module.exports = __webpack_public_path__ + \"static/media/logo.25a43f77.svg\";","module.exports = __webpack_public_path__ + \"static/media/polygon.a146b1bc.svg\";"],"sourceRoot":""}